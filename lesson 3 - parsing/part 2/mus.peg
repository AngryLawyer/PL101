start =
    _ item: seq _
      {return item;}

seq =
    left: repeat newLine+ whiteSpace* right: seq
        { return {tag: "seq", left: left, right: right}; }
  / repeat

repeat = 
    "loop" whiteSpace+ dur: ([1-9][0-9]*) newLine _ sec: seq _ "end" newLine*
        {return {tag: "repeat", section: sec, count: parseInt(dur.join(""))} ;}
  / par

par =
    left: rest whiteSpace+ right: par
        { return {tag: "par", left: left, right: right}; }
  / rest

rest = 
    "breathe/" dur: [0-9]+
        { return {tag: "rest", dur: parseInt(dur.join(""))}; }
  / "breathe"
        { return {tag: "rest", dur: 250}; }
  / note

note =
    note: noteWord "[" pitch: [1-9] "]/" dur: [0-9]+
        { return {tag: "note", pitch: note.concat(pitch), dur: parseInt(dur.join(""))}; }
  / note: noteWord "[" pitch: [1-9] "]"
        { return {tag: "note", pitch: note.concat(pitch), dur: 250}; }
  / note: noteWord "/" dur: [0-9]+
        { return {tag: "note", pitch: note.concat("4"), dur: parseInt(dur.join(""))}; }
  / note: noteWord
        { return {tag: "note", pitch: note.concat("4"), dur: 250}; }

noteWord = 
    "do"
        { return "c"; }
  / "re"
        { return "d"; }
  / "mi"
        { return "e"; }
  / "fa"
        { return "f"; }
  / "sol"
        { return "g"; }
  / "la"
        { return "a"; }
  / "ti"
        { return "b"; }

newLine = 
    whiteSpace* ("\r\n" / "\n\r" / "\n" / "\r" / comment)+

whiteSpace =
    (" " / [\t])+

comment = 
    whiteSpace* "%" (" " / [!-~])* 

_ = 
  (newLine / whiteSpace)*
